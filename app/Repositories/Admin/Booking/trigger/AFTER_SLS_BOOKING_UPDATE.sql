CREATE TRIGGER AFTER_SLS_BOOKING_UPDATE
  AFTER UPDATE
  ON SLS_BOOKING FOR EACH ROW
BEGIN

    -- DECLARE VAR_ORDER_BALANCE_USED FLOAT default 0;
    declare VAR_TOTAL_PRICE float default 0;
    declare VAR_SUBTOTAL_PRICE float default 0;
    -- DECLARE VAR_PENALTY_FEE FLOAT default 0;
    DECLARE VAR_POSTAGE_COST FLOAT default 0;
    DECLARE VAR_DISCOUNT FLOAT default 0;
    DECLARE VAR_COUPON_DISCOUNT FLOAT default 0;
    DECLARE VAR_TOTAL_PRICE_DECIMAL FLOAT default 0;
    DECLARE VAR_SUBTOTAL_PRICE_DECIMAL FLOAT default 0;
    -- DECLARE VAR_ORDER_PRICE_DECIMAL FLOAT default 0;   
    -- SELECT SUM(LINE_PRICE) INTO VAR_TOTAL_PRICE
    -- FROM SLS_BOOKING_DETAILS
    -- WHERE F_BOOKING_NO = NEW.F_BOOKING_NO;
    
    SELECT SUB_TOTAL,POSTAGE_COST,COUPON_DISCOUNT,DISCOUNT 
    INTO 
    VAR_SUBTOTAL_PRICE,
    VAR_POSTAGE_COST,
    VAR_COUPON_DISCOUNT,
    VAR_DISCOUNT

    FROM SLS_BOOKING
    WHERE PK_NO = NEW.PK_NO;

    
    SET VAR_TOTAL_PRICE = (VAR_SUBTOTAL_PRICE + VAR_POSTAGE_COST)-(VAR_DISCOUNT+VAR_COUPON_DISCOUNT);
    -- SELECT SUM(LINE_PRICE) AS TOTAL_LINE_PRICE INTO VAR_ORDER_BALANCE_USED FROM SLS_BOOKING_DETAILS
    -- WHERE F_BOOKING_NO =  NEW.F_BOOKING_NO AND ORDER_STATUS = '60';


    SELECT (VAR_TOTAL_PRICE % 1) INTO VAR_TOTAL_PRICE_DECIMAL;
    IF VAR_TOTAL_PRICE_DECIMAL < .5 THEN
       SELECT FLOOR(VAR_TOTAL_PRICE) INTO VAR_TOTAL_PRICE;
    ELSE
       SELECT CEILING(VAR_TOTAL_PRICE) INTO VAR_TOTAL_PRICE;
    END IF;   
    
    -- SELECT (VAR_ORDER_BALANCE_USED % 1) INTO VAR_ORDER_PRICE_DECIMAL;
    -- IF VAR_ORDER_PRICE_DECIMAL < .5 THEN
    --    SELECT FLOOR(VAR_ORDER_BALANCE_USED) INTO VAR_ORDER_BALANCE_USED;
    -- ELSE
    --    SELECT CEILING(VAR_ORDER_BALANCE_USED) INTO VAR_ORDER_BALANCE_USED;
    -- END IF;
    
    UPDATE SLS_BOOKING SET TOTAL_PRICE = VAR_TOTAL_PRICE WHERE PK_NO = NEW.PK_NO;



END
/
